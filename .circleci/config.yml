version: 2.1          
orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.2

jobs:
  unitTest:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - restore_cache:
          key: v1-cache-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}-{{ arch }}
            
      - run:
          name: Install yarn dependencies
          command: yarn install

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: v1-cache-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}-{{ arch }}

      - run: 
          name: Run ESLint
          command: yarn lint

      - run: 
          name: Run Jest Test
          command: yarn test

      - sonarcloud/scan

  e2eTest:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - restore_cache:
          key: v1-cache-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}-{{ arch }}

      - run:
          name: Install Expo CLI
          command: yarn add expo-cli

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: v1-cache-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}-{{ arch }}

      - run:
          name: Login into Expo
          command: npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD

      - run:
          name : App upload and Set app id in environment variable.
          command : |
            APK_PATH=$(npx expo url:apk)
            APP_UPLOAD_RESPONSE=$(curl -u "johncarlodeleon1:EPnWvRvF8sxcKEC9xpat" -X POST https://api-cloud.browserstack.com/app-automate/upload -F "url=$APK_PATH")
            APP_ID=$(echo $APP_UPLOAD_RESPONSE | jq -r ".app_url")
            if [ $APP_ID != null ]; then
              echo "Apk uploaded to BrowserStack with app id : ",$APP_ID;
              echo "export BROWSERSTACK_APP_ID=$APP_ID" >> $BASH_ENV;
              source $BASH_ENV;
              echo "Setting value of BROWSERSTACK_APP_ID in environment variables to  ",$APP_ID;
            else
              UPLOAD_ERROR_MESSAGE=$(echo $APP_UPLOAD_RESPONSE | jq -r ".error")
              echo "App upload failed, reason : ",$UPLOAD_ERROR_MESSAGE
              exit 1;
            fi

      - run:
          name: Run e2e Test
          command: node e2e-test.js
         
workflows:
  node-tests:
    jobs:
      - unitTest:
          context: sonarcloud
          filters:
            branches:
              ignore:
                - master
      - e2eTest:
          requires:
            - unitTest
          filters:
            branches:
              only:
                - main